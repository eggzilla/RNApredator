#!/usr/bin/perl
use strict;
use diagnostics;
use GD;
#asccii-like png output of interaction
#parse input
$|=1;
my $tempdir = $ARGV[0];
my $mRNA_identifier = $ARGV[1];
my $mRNA_start =$ARGV[2];
my $mRNA_start_print=$mRNA_start-200;
my $mRNA_end =$ARGV[3];
my $mRNA_end_print=$mRNA_end-200;
my $mRNA_offset = $mRNA_start - 1;
my $mRNA_length = $mRNA_end - $mRNA_start;
my $sRNA_start=$ARGV[4];
my $sRNA_end =$ARGV[5];
my $sRNA_offset = $sRNA_start;
my $sRNA_length = ($sRNA_end - $sRNA_start);
#todo: split dot bracket, finish  substr, include in target_search
my $input_dot_bracket_string=$ARGV[6];
my @input_dot_bracket_array = split("&",$input_dot_bracket_string);
my $mRNA_dot_bracket_string=$input_dot_bracket_array[0];
my $sRNA_dot_bracket_string=$input_dot_bracket_array[1]; 
#open mRNA filehandle and get seq
open (MRNA, "</u/html/RNApredator/$tempdir/$mRNA_identifier.fasta") or die "No $tempdir/$mRNA_identifier.fasta found";
my @mRNA_fasta = <MRNA>;
my $whole_mRNA = $mRNA_fasta[1];
my $mRNA = substr $whole_mRNA, $mRNA_offset, $mRNA_length;
#open sRNA filehandle and get seq
open (SRNA, "</u/html/RNApredator/$tempdir/sRNA.fasta") or die "No $tempdir/sRNA.fasta found";
my @sRNA_fasta = <SRNA>;
my $whole_sRNA=$sRNA_fasta[1];
my $sRNA = substr $whole_sRNA, $sRNA_offset, $sRNA_length;

#get and calculate al relevant mRNA values
	#my $mRNA="GGGATGATGATAACAAATGCGCGTCTTT"; #Interaction Site
	#T gegen U tauschen
	my $mRNA_start_html = $mRNA_start - 200; #-200
	my $mRNA_end_html = $mRNA_end - 200; #-200
	$mRNA =~ s/T/U/g;
	my @mRNA = split '', $mRNA;
	#my $mRNA_dot_bracket_string = "(.((((((((((((((((((((((((.(";
	my @mRNA_dot_bracket = split '', $mRNA_dot_bracket_string;
	#get number of RNA basepair by counting brackets
	#my $basepairs=0;
	#foreach my $mRNA_dot_bracket_letter (@mRNA_dot_bracket){
	#		if($mRNA_dot_bracket_letter =~ m/\(/ ){
	#		$basepairs++;
	#	}	
	#}
	#$bild->string(gdGiantFont,1,10,"sequlength = $basepairs",$black);

	#my $sRNA_dot_bracket_string = ").))))))))))))))))))))))))))";
	my @sRNA_dot_bracket = split '', $sRNA_dot_bracket_string;
	@sRNA_dot_bracket = reverse(@sRNA_dot_bracket);
	#my $sRNA="AAGACGCGCAUUUGUUAUCAUCAUCCC"; #Interaction Site
	my @sRNA = split '', $sRNA;
	@sRNA = reverse(@sRNA);
#my total length
my $length;
if($mRNA_length>$sRNA_length){
	$length=$mRNA_length;	
}else{
	$length=$sRNA_length;
}

#Render Image
#calculate image dimensions
my $x_length = 2*(7*9) + ($length*9)*2;
#my $x_lenght = 1000;

my $y_length = 135; #7 letters high
my $bild = new GD::Image($x_length,$y_length);
#define colors
my $white = $bild->colorAllocate(255,255,255);
my $blue = $bild->colorAllocate(0,200,200);
my $red = $bild->colorAllocate(255,0,0);
my $black = $bild->colorAllocate(0,0,0);
#draw frame + render legend
	$bild->rectangle(0,0,$x_length-1,$y_length-1,$black);
	$bild->string(gdGiantFont,9,15,"mRNA $mRNA_start_print : $mRNA_end_print",$black);
	$bild->string(gdGiantFont,9,75,"sRNA $sRNA_start : $sRNA_end",$black);
	$bild->string(gdLargeFont,9,105,"covalent bond:",$black);
	$bild->string(gdLargeFont,126,105,"-",$black);
	$bild->string(gdLargeFont,150,105,"basepair:",$black);
	$bild->string(gdLargeFont,225,105,"-",$blue);
	#$bild->string(gdLargeFont,9,120,"basepair:",$black);
	#$bild->line(91,128,97,128,$blue);

#x,y 
#$bild->rectangle(0,0,299,149,$rot);
#$bild->rectangle(9,0,9,160,$black);
#$bild->rectangle(0,10,299,10,$black);
#$bild->rectangle(0,25,299,25,$black);
#$bild->string(gdGiantFont,1,10,"UAAAAAAAAAAAAA",$black);
#$bild->string(gdGiantFont,1,90,"UTTTATATATATAT",$black);

#Asccii - string
#additionaly we print an asccii output
#with lines: mRNA - interaction - sRNA
my $mRNA_asccii="";
my $interaction_asccii="";
my $sRNA_asccii="";

for(my $i=0;$i<$length;$i++){
	#we look at s and mRNA dot braket arrays and have 4 different cases
	my $mRNA_dot_bracket_letter = shift(@mRNA_dot_bracket);
	my $sRNA_dot_bracket_letter = shift(@sRNA_dot_bracket);
	if(($mRNA_dot_bracket_letter =~ m/\(/ ) and ( $sRNA_dot_bracket_letter =~ m/\)/)){
	#case 1 basepair	
		#mRNA
		#calculate coordinates
                my $mRNA_y=30;
                my $mRNA_x=7*9 + ($i*9)*2 -9;
                if($i!=0){
                       #calculate coordinates for covalent bond and print
                       $bild->string(gdGiantFont,$mRNA_x-9,$mRNA_y,"-",$black);
                }
                #fetch letter
                my $mRNA_letter=shift(@mRNA);
		#add to asccii
		$mRNA_asccii = "$mRNA_asccii"."$mRNA_letter";
		#add interaction letter to asccii
		$interaction_asccii = "$interaction_asccii"."|";
                #draw letter
                $bild->string(gdGiantFont,$mRNA_x,$mRNA_y,"$mRNA_letter",$black);
		#sRNA
		#calculate coordinates
                my $sRNA_y=60;
                my $sRNA_x=7*9 + ($i*9)*2 -9;
                if($i!=0){
                        #calculate coordinates for covalent bond and print
                        $bild->string(gdGiantFont,$sRNA_x-9,$sRNA_y,"-",$black);
                }      
                #fetch letter
                my $sRNA_letter=shift(@sRNA);
		$sRNA_asccii = "$sRNA_asccii"."$sRNA_letter";
                #draw letter
	        $bild->string(gdGiantFont,$sRNA_x,$sRNA_y,"$sRNA_letter",$black);
		#basepair
		my $base_pair_x1 = $mRNA_x + 5;
		my $base_pair_y1 = $mRNA_y +15;
		my $base_pair_x2 = $sRNA_x + 5;
		my $base_pair_y2 = $sRNA_y;

		$bild->line($base_pair_x1,$base_pair_y1,$base_pair_x2,$base_pair_y2,$blue);
	
	}elsif(($mRNA_dot_bracket_letter =~ m/\./ ) and ( $sRNA_dot_bracket_letter =~ m/\./)){
	#case 2 no basepair 
		#mRNA
                #calculate coordinates
                my $mRNA_y=30;
                my $mRNA_x=7*9 + ($i*9)*2 -9;
                if($i!=0){
                       #calculate coordinates for covalent bond and print
                       $bild->string(gdGiantFont,$mRNA_x-9,$mRNA_y,"-",$black);
                }
                #fetch letter
                my $mRNA_letter=shift(@mRNA);
		#asccii
		$mRNA_asccii = "$mRNA_asccii"."$mRNA_letter";
                #draw letter
                $bild->string(gdGiantFont,$mRNA_x,$mRNA_y,"$mRNA_letter",$black);
                #sRNA
                #calculate coordinates
                my $sRNA_y=60;
                my $sRNA_x=7*9 + ($i*9)*2 -9;
                if($i!=0){
                        #calculate coordinates for covalent bond and print
                        $bild->string(gdGiantFont,$sRNA_x-9,$sRNA_y,"-",$black);
                }
                #fetch letter
                my $sRNA_letter=shift(@sRNA);
		#asccii
		$sRNA_asccii = "$sRNA_asccii"."$sRNA_letter";
		$interaction_asccii = "$interaction_asccii"." ";
                #draw letter
                $bild->string(gdGiantFont,$sRNA_x,$sRNA_y,"$sRNA_letter",$black);
                #basepair
                my $base_pair_x1 = $mRNA_x + 5;
                my $base_pair_y1 = $mRNA_y + 15;
                my $base_pair_x2 = $sRNA_x + 5;
                my $base_pair_y2 = $sRNA_y;

	}elsif(($mRNA_dot_bracket_letter =~ m/\./ ) and ( $sRNA_dot_bracket_letter =~ m/\)/)){
	#case 3 no pairing base on mRNA
		#get letter and print dash
		#mRNA
                #calculate coordinates
                my $mRNA_y=30;
                my $mRNA_x=7*9 + ($i*9)*2 -9;
                if($i!=0){
                       #calculate coordinates for covalent bond and print
                       $bild->string(gdGiantFont,$mRNA_x-9,$mRNA_y,"-",$black);
                }
                #fetch letter
                my $mRNA_letter=shift(@mRNA);
		#asscci
		$mRNA_asccii = "$mRNA_asccii"."$mRNA_letter";
		$interaction_asccii = "$interaction_asccii"." ";
		$sRNA_asccii = "$sRNA_asccii"."-";
                #draw letter
                $bild->string(gdGiantFont,$mRNA_x,$mRNA_y,"$mRNA_letter",$black);

		#sRNA
		my $sRNA_y=60;
                my $sRNA_x=7*9 + ($i*9)*2 -9;
		if($i!=0){
                       #calculate coordinates for covalent bond and print
                       $bild->string(gdGiantFont,$sRNA_x-9,$sRNA_y,"-",$black);
                }
		my $sRNA_y1=68;
                my $sRNA_x1=7*9 + ($i*9)*2 -10;
		my $sRNA_y2=68;
                my $sRNA_x2=7*9 + ($i*9)*2 +1;
		$bild->line($sRNA_x1,$sRNA_y1,$sRNA_x2,$sRNA_y2,$black);
				

	}elsif(($mRNA_dot_bracket_letter =~ m/\(/ ) and ( $sRNA_dot_bracket_letter =~ m/\./)){
	#case 4 no basepair on sRNA	
		#get letter and print dash
                #mRNA
                #calculate coordinates
                my $sRNA_y=60;
                my $sRNA_x=7*9 + ($i*9)*2 -9;
                if($i!=0){
                       #calculate coordinates for covalent bond and print
                       $bild->string(gdGiantFont,$sRNA_x-9,$sRNA_y,"-",$black);
                }
                #fetch letter
                my $sRNA_letter=shift(@sRNA);
		#asscci
		$mRNA_asccii = "$mRNA_asccii"."-";
		$interaction_asccii = "$interaction_asccii"." ";
		$sRNA_asccii = "$sRNA_asccii"."$sRNA_letter";
                #draw letter
                $bild->string(gdGiantFont,$sRNA_x,$sRNA_y,"$sRNA_letter",$black);

                #sRNA
                my $mRNA_y=30;
                my $mRNA_x=7*9 + ($i*9)*2 -9;
                if($i!=0){
                       #calculate coordinates for covalent bond and print
                       $bild->string(gdGiantFont,$mRNA_x-9,$mRNA_y,"-",$black);
                }
                my $mRNA_y1=38;
                my $mRNA_x1=7*9 + ($i*9)*2 -10;
                my $mRNA_y2=38;
                my $mRNA_x2=7*9 + ($i*9)*2+1 ;
                $bild->line($mRNA_x1,$mRNA_y1,$mRNA_x2, $mRNA_y2,$black);
	}


}

open (PICTURE, ">/u/html/RNApredator/$tempdir/$mRNA_identifier.png") or die "Could not write $tempdir/$mRNA_identifier.png";
binmode PICTURE;
print PICTURE $bild->png;
close PICTURE;
#asccii output:
open (ASCII, ">/u/html/RNApredator/$tempdir/$mRNA_identifier.ascii") or die "Could not write $tempdir/$mRNA_identifier.ascii";
#print ASCII  "<pre>$mRNA_asccii</pre><pre>$interaction_asccii</pre><pre>$sRNA_asccii</pre>\n";
print ASCII  "<table><tr><td><pre>5'-<br><br>3'-</pre></td><td><pre>$mRNA_asccii<br>$interaction_asccii<br>$sRNA_asccii<br></pre></td><td><pre>-3'<br><br>-5'</pre></td></tr></table>";	
close ASCII;
